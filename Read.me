스크립트 사용 설명서
이 스크립트는 동영상 파일에서 이미지를 추출하고, 유사한 이미지를 제거한 후, 남은 이미지로 PDF 파일을 생성합니다. 다음과 같은 단계로 동작합니다:

동영상 파일에서 이미지 추출: 주어진 간격에 따라 동영상 파일에서 이미지를 추출합니다.
유사한 이미지 제거: 해시 기반의 유사도 검사를 통해 중복된 이미지를 제거합니다.
PDF 생성: 남은 이미지를 기준으로 PDF 파일을 생성합니다.
필요 라이브러리 설치

스크립트를 실행하기 전에 필요한 라이브러리를 설치해야 합니다. 다음 명령어를 사용하여 설치합니다:
pip install opencv-python pillow imagehash fpdf scikit-image

스크립트 사용 방법

동영상 파일 준비: 스크립트와 같은 폴더에 동영상 파일을 준비합니다. 지원되는 동영상 형식은 .mp4 및 .mov입니다.
스크립트 실행: 터미널에서 스크립트를 실행합니다.

python script.py
캡처 간격 입력: 스크립트를 실행하면, 동영상을 캡쳐할 간격을 초 단위로 입력합니다.

동영상을 캡쳐 할 간격을 초 단위로 지정해주세요:(예: 0.3초)
결과 확인: 각 동영상 파일에 대해 다음과 같은 작업이 수행됩니다:
동영상 파일과 동일한 이름의 폴더가 생성됩니다.
지정된 간격에 따라 프레임이 추출되어 해당 폴더에 저장됩니다.
유사한 이미지가 제거되고, 고유한 이미지가 선택됩니다.
고유한 이미지를 포함하는 PDF 파일이 생성됩니다. PDF 파일은 동영상 파일과 동일한 이름으로 생성됩니다.
주요 함수 설명

variance_of_laplacian(image): 이미지의 Laplacian을 계산하여 초점 품질을 측정합니다.
hash_image(img): 이미지의 해시를 계산합니다.
hash_sub_images(img, rows=4, cols=8): 이미지를 부분으로 나누고 각 부분의 해시를 계산합니다.
is_similar(hash_list1, hash_list2, similarity_threshold=0.90): 해시 리스트를 비교하여 두 이미지가 유사한지 확인합니다.
process_images(folder_path): 폴더 내 이미지를 처리하여 중복 이미지를 제거합니다.
extract_frames(video_path, output_folder, interval): 동영상 파일에서 지정된 간격으로 프레임을 추출합니다.
images_to_pdf(image_list, output_pdf): 이미지 리스트를 PDF 파일로 변환합니다.
main(): 스크립트의 메인 함수로, 모든 작업을 순차적으로 실행합니다.
이 스크립트를 통해 동영상 파일에서 유용한 이미지를 추출하고, 정리된 이미지를 PDF로 변환할 수 있습니다.
